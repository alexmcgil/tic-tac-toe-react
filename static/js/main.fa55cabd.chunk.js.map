{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","showHide","setState","currentState","show","change","flag","count","isWinner","s","state","i","line","winnerLine","squares","status","stats","resetGame","Array","fill","countGame","statusCount","console","log","clickHandler","e","data","target","getAttribute","currenSquare","choose","onClick","className","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa55cabd.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      count: 0,\n      status: \"\",\n      countGame: 2,\n      statusCount: \"Идёт 1 игра\",\n      show: true,\n      flag: false,\n\n    }\n    this.winnerLine = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n        ]\n      this.stats = {\n        \"X\" : 0,\n        \"O\" : 0,\n      }\n\n      this.flag = null;\n\n      this.choose = <div onClick={this.showHide}>Первый ход<br /> <button>X</button><button onClick={this.change}>O</button></div>\n  }\n\n  showHide = () => this.setState((currentState) => ({show: !currentState.show}));\n\n  change = () => {\n    this.setState({ flag: true });\n    this.setState({ count: 1 });\n  }\n\n  isWinner = () => {\n    let s = (this.state.count % 2 === 0) ? \"X\" : \"O\";\n    for (let i = 0; i < 8; i++){\n      let line = this.winnerLine[i];\n      if (this.state.squares[line[0]] === s && this.state.squares[line[1]] === s && this.state.squares[line[2]] === s) {\n        this.setState({ status: `${(s === \"X\") ? \"Первый\" : \"Второй\"} игрок победил!`});\n        this.stats[s]++;\n        this.flag = true;\n    }\n      if ((this.state.flag === false && this.flag === null && this.state.count === 8) || (this.state.flag === true && this.flag === null && this.state.count === 9)){\n          this.setState({status: \"Ого, похоже, у вас ничья!\"});\n      }\n    }\n  }\n\n  resetGame = () => {\n    this.setState({ squares: Array(9).fill(null) });\n    this.setState({ count: 0 });\n    this.setState({ countGame: this.state.countGame + 1});\n    this.setState({ statusCount: `Идёт ${this.state.countGame} игра`})\n    this.flag = null;\n    console.log(this.state.show);\n    this.showHide();\n    console.log(this.state.show);\n  }\n\n  clickHandler = e => {\n    this.setState({ show: false})\n    let data = e.target.getAttribute(\"data\");\n    let currenSquare = this.state.squares;\n    if (currenSquare[data] === null) {\n      currenSquare[data] = (this.state.count % 2 === 0) ? \"X\" : \"O\";\n      this.setState({ count: this.state.count + 1 });\n      this.setState({ squares: currenSquare});\n    }\n    this.isWinner();\n    }\n\n  render(){\n    return (\n      <div className=\"tic-tac-toe\">\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"0\">{this.state.squares[0]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"1\">{this.state.squares[1]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"2\">{this.state.squares[2]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"3\">{this.state.squares[3]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"4\">{this.state.squares[4]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"5\">{this.state.squares[5]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"6\">{this.state.squares[6]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"7\">{this.state.squares[7]}</div>\n        <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"8\">{this.state.squares[8]}</div>\n        <br/>\n        <button onClick={this.resetGame}>Начать новую игру</button>\n        <p>Счёт:</p>\n          <p>Первый игрок: {this.stats[\"X\"]}</p>\n          <p>Второй игрок: {this.stats[\"O\"]}</p>\n        <p>{this.state.statusCount}</p>\n        <p>{this.state.status}</p>\n        <div>{this.state.show && this.choose}</div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}